load("@pip//:requirements.bzl", "requirement")
load("@python_repo//:build_defs.bzl", "if_python_version")
load("@rules_pkg//pkg:tar.bzl", "pkg_tar")
load("//autonomy/jupiter/robotics/halo/bundle:models.bzl", "HALO_MODELS")
load("//autonomy/jupiter/robotics/JupiterPythonDependencies:defs.bzl", "INORBIT_PYTHON_DEPS")
load("//third_party/python:defs.bzl", "VPU_PYTHON_DEPS")
load("//tools:models.bzl", "brt_engine_files")
load("//tools:ros2.bzl", "brt_ros2_pip_pkg")

pkg_tar(
    name = "jupiter_installed_packages",
    tags = [
        "no-cache",
        "no-remote-cache-upload",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "//autonomy/jupiter/robotics/JupiterEmbedded/jupiter_config:jupiter_config_pkg",
        "//autonomy/jupiter/robotics/JupiterEmbedded/src/autonomy_event:autonomy_event_pkg",
        "//autonomy/jupiter/robotics/JupiterEmbedded/src/bag_recorder:bag_recorder_pkg",
        "//autonomy/jupiter/robotics/JupiterEmbedded/src/canbus_module:canbus_module_pkg",
        "//autonomy/jupiter/robotics/JupiterEmbedded/src/data_capture_trigger:data_capture_trigger_pkg",
        "//autonomy/jupiter/robotics/JupiterEmbedded/src/determinator:determinator_pkg",
        "//autonomy/jupiter/robotics/JupiterEmbedded/src/dnn_engine:dnn_engine_pkg",
        "//autonomy/jupiter/robotics/JupiterEmbedded/src/equipment_motion_analyzer:equipment_motion_analyzer_pkg",
        "//autonomy/jupiter/robotics/JupiterEmbedded/src/field_origin_provider:field_origin_provider_pkg",
        "//autonomy/jupiter/robotics/JupiterEmbedded/src/frame_transform_provider:frame_transform_config_pkg",
        "//autonomy/jupiter/robotics/JupiterEmbedded/src/frame_transform_provider:frame_transform_provider_pkg",
        "//autonomy/jupiter/robotics/JupiterEmbedded/src/image_quality:image_quality_pkg",
        "//autonomy/jupiter/robotics/JupiterEmbedded/src/imaging_mode:imaging_mode_pkg",
        "//autonomy/jupiter/robotics/JupiterEmbedded/src/implement_angle_node:implement_angle_node_pkg",
        "//autonomy/jupiter/robotics/JupiterEmbedded/src/jupiter_io:jupiter_io_pkg",
        "//autonomy/jupiter/robotics/JupiterEmbedded/src/jupiter_roslib:jupiter_roslib_py_pkg",
        "//autonomy/jupiter/robotics/JupiterEmbedded/src/launch_utils:launch_utils_pkg",
        "//autonomy/jupiter/robotics/JupiterEmbedded/src/message_cache:message_cache_pkg",
        "//autonomy/jupiter/robotics/JupiterEmbedded/src/metrics_handler:metrics_handler_pkg",
        "//autonomy/jupiter/robotics/JupiterEmbedded/src/misuse_monitor:misuse_monitor_pkg",
        "//autonomy/jupiter/robotics/JupiterEmbedded/src/misuse_monitor_mock:misuse_monitor_mock_pkg",
        "//autonomy/jupiter/robotics/JupiterEmbedded/src/mqtt_proxy:mqtt_proxy_pkg",
        "//autonomy/jupiter/robotics/JupiterEmbedded/src/object_localizer:object_localizer_pkg",
        "//autonomy/jupiter/robotics/JupiterEmbedded/src/online_cal:online_cal_pkg",
        "//autonomy/jupiter/robotics/JupiterEmbedded/src/passive_mapping:passive_mapping_pkg",
        "//autonomy/jupiter/robotics/JupiterEmbedded/src/path_provider:path_provider_pkg",
        "//autonomy/jupiter/robotics/JupiterEmbedded/src/sparkai_heartbeat:sparkai_heartbeat_pkg",
        "//autonomy/jupiter/robotics/JupiterEmbedded/src/sparkai_proxy:sparkai_proxy_pkg",
        "//autonomy/jupiter/robotics/JupiterEmbedded/src/stream_compressor:stream_compressor_pkg",
        "//autonomy/jupiter/robotics/JupiterEmbedded/src/system_utils:system_utils_pkg",
        "//autonomy/jupiter/robotics/JupiterEmbedded/src/tracking:tracking_pkg",
        "//autonomy/jupiter/robotics/JupiterEmbedded/src/tracking_v2:tracking_v2_pkg",
        "//autonomy/jupiter/robotics/JupiterEmbedded/src/update_monitor:update_monitor_pkg",
        "//autonomy/jupiter/robotics/JupiterEmbedded/src/visualization_republisher:visualization_republisher_pkg",
        "//autonomy/jupiter/robotics/JupiterEmbedded/src/vpu_monitor:vpu_monitor_pkg",
        "//autonomy/jupiter/robotics/JupiterEmbedded/src/webcast:webcast_pkg",
        "//autonomy/jupiter/robotics/JupiterInterface/can_msgs:can_msgs_idls_tar",
        "//autonomy/jupiter/robotics/JupiterInterface/can_msgs:can_msgs_py_pkg",
        "//autonomy/jupiter/robotics/JupiterInterface/can_msgs:can_msgs_typesupport_tar",
        "//autonomy/jupiter/robotics/JupiterInterface/configs:jupiter_interface_configs_pkg",
        "//autonomy/jupiter/robotics/JupiterInterface/gen4_msgs:gen4_msgs_idls_tar",
        "//autonomy/jupiter/robotics/JupiterInterface/gen4_msgs:gen4_msgs_py_pkg",
        "//autonomy/jupiter/robotics/JupiterInterface/gen4_msgs:gen4_msgs_typesupport_tar",
        "//autonomy/jupiter/robotics/JupiterInterface/jupiter_detection_msgs:jupiter_detection_msgs_py_pkg",
        "//autonomy/jupiter/robotics/JupiterInterface/jupiter_msgs:jupiter_msgs_idls_tar",
        "//autonomy/jupiter/robotics/JupiterInterface/jupiter_msgs:jupiter_msgs_py_pkg",
        "//autonomy/jupiter/robotics/JupiterInterface/jupiter_msgs:jupiter_msgs_typesupport_tar",
        "//autonomy/jupiter/robotics/JupiterInterface/jupiter_object_state_msgs:jupiter_object_state_msgs_py_pkg",
        "//autonomy/jupiter/robotics/JupiterInterface/jupiter_path_msgs:jupiter_path_msgs_py_pkg",
        "//autonomy/jupiter/robotics/JupiterInterface/jupiter_proto:jupiter_proto_py_pkg",
        "//autonomy/jupiter/robotics/JupiterInterface/jupiter_tracking_msgs:jupiter_tracking_msgs_py_pkg",
        "//autonomy/jupiter/robotics/JupiterLibs/libs/jutils:jutils_pkg",
        "//autonomy/jupiter/robotics/JupiterLibs/src/jdb:jdb_pkg",
        "//autonomy/jupiter/robotics/JupiterLibs/src/jupiter_vision/py_interface:py_jupiter_vision_pkg",
        "//autonomy/jupiter/robotics/JupiterLibs/src/stream_codec:stream_codec_pkg",
        "//autonomy/jupiter/robotics/JupiterLibs/src/trt_inferer:py_trt_inferer_pkg",
        "//third_party/robot_state_publisher:robot_state_publisher_pkg",
        "//third_party/xacro:xacro_pkg",
        "@com_github_ros2_geometry2//:tf2_msgs_idls_pkg",
        "@kdl//:kdl_3_3_5_pkg",
    ] + select({
        "//tools/crosstool:vpu1_jp4": [
            ":missing_cuda_files",
            "//autonomy/jupiter/robotics/JupiterEmbedded/src/formant_proxy:formant_proxy_pkg",
            "@formant//formant:formant_1_106_39_pkg",
        ],
        "//conditions:default": [],
    }),
)

pkg_tar(
    name = "jupiter-appfs-sans-symlinks",
    srcs = [
        ":rev1_engine_files",
    ],
    package_dir = "brt",
    tags = [
        "manual",
        "no-cache",
        "no-remote",
        "no-remote-cache-upload",
    ],
    deps = [
        ":jupiter_installed_packages",
        ":missing_cuda_files",
        ":pip_deps_pkg",
        ":ros_shims",
        "//autonomy/jupiter/robotics/rev1:rev1_version_pkg_tar",
        "//autonomy/jupiter/tools/aws_auth/secrets:jupiter_embedded_secrets_pkg",
    ],
)

pkg_tar(
    name = "jupiter-appfs",
    empty_dirs = [
        "JupiterEmbedded",
        "lib/python3.8",
    ],
    symlinks = {
        "JupiterEmbedded/install": "../brt/ros",
        "data": "brt/data",
        "etc": "brt/etc",
    },
    tags = [
        "manual",
        "no-cache",
        "no-remote",
        "no-remote-cache-upload",
    ],
    deps = [
        ":jupiter-appfs-sans-symlinks",
    ],
)

genquery(
    name = "jupiter-appfs-pydeps",
    expression = "kind(py_*, deps(//autonomy/jupiter/robotics/rev1/bundle:jupiter-appfs))",
    opts = [
        "--noimplicit_deps",
        "--notool_deps",
    ],
    scope = ["//autonomy/jupiter/robotics/rev1/bundle:jupiter-appfs"],
    tags = ["manual"],
)

pkg_tar(
    name = "tf2_ros_pkg",
    srcs = [
        "@com_github_ros2_geometry2//:tf2_ros_py",
    ],
    include_runfiles = True,
    remap_paths = {
        "external/com_github_empy/": "/",
        "external/com_github_ros2_geometry2/tf2_ros/src/": "/",
        "external/ros2/rcl_interfaces": "/",
        "external/ros2/common_interfaces": "/",
        "external/ros2/unique_identifier_msgs": "/",
        "external/com_github_ros2_geometry2": "/",
        "external/pip_lark_parser/site-packages": "/",
        "external/ros2/rosidl/rosidl_parser": "/",
        "external/ros2/rosidl/rosidl_cmake": "/",
        "external/ros2/rosidl/rosidl_generator_c": "/",
        "external/pip_vpu1_jp4_lark_parser/site-packages/": "/",
        "external/pip_vpu1_jp4_lark/site-packages/": "/",
        "external/pip_vpu1_jp4_numpy/site-packages/": "/",
        "external/ros2/rpyutils": "/",
        "external/ros2/rosidl_python/rosidl_generator_py": "/",
        "external/ros2/ament_index/ament_index_python": "/",
        "external/ros2/rclpy/rclpy": "/",
        "external/com_github_ros2_geometry2/tf2_ros_py": "/",
    },
    strip_prefix = ".",
    tags = ["manual"],
    visibility = ["//visibility:private"],
    deps = [],
)

brt_ros2_pip_pkg(
    name = "pip_deps_pkg",
    pip_packages = VPU_PYTHON_DEPS + INORBIT_PYTHON_DEPS,
    tags = ["manual"],
    visibility = ["//autonomy/jupiter/robotics:__subpackages__"],
    deps = [
        # TODO: Figure out how to include things like this automatically
        ":certifi_cacert_pem_pkg",
        "//autonomy/jupiter/robotics/JupiterLibs/libs/disk_manager:disk_manager_tar",
        "//autonomy/jupiter/robotics/JupiterPythonDependencies/extra/third_party/python3.8/site-packages:getpass_pkg",
        "//autonomy/jupiter/robotics/JupiterPythonDependencies/extra/third_party/python3.8/site-packages:imghdr_pkg",
        "//autonomy/jupiter/robotics/JupiterPythonDependencies/extra/third_party/python3.8/site-packages:dbm_pkg",
        ":tf2_ros_pkg",
        "@paho-mqtt//:paho-mqtt_pkg",
    ] + select({
        "//tools/crosstool:vpu1_jp4": [
            ":pip_deps_pkg_backports_zoneinfo_pkg",  # Dep only for python3.8 on JetPack4
        ],
        "//conditions:default": [],
    }),
)

pkg_tar(
    name = "pip_deps_pkg_backports_zoneinfo_pkg",
    srcs = if_python_version(
        "3.8",
        [
            requirement("backports-zoneinfo"),  # Dep only for python3.8, does not exist on later versions
        ],
    ),
    package_dir = "/",
    remap_paths = {
        #__init__.py is generated by bazel above the package, is not needed, and causes collision warnings.
        "external/pip_backports_zoneinfo/site-packages/__init__.py": "pip_backports_zoneinfo/unused/todo-delete-file/__init__.py.bak",
        "external/pip_backports_zoneinfo/site-packages": "/",
    },
    strip_prefix = ".",
    tags = ["manual"],
    visibility = ["//visibility:private"],
    deps = [],
)

sh_test(
    name = "pip_deps_pkg_test",
    srcs = ["pip_deps_pkg_test.sh"],
    data = [":pip_deps_pkg"],
    tags = ["manual"],
)

pkg_tar(
    name = "certifi_cacert_pem_pkg",
    srcs = select({
        "//tools:linux_vpu_xavier": [
            "@pip_vpu1_jp4_certifi//:site-packages/certifi/cacert.pem",
        ],
        "//conditions:default": [
            "@pip_certifi//:site-packages/certifi/cacert.pem",
        ],
    }),
    remap_paths = {
        "external/pip_certifi/site-packages/": "/",
        "external/pip_vpu1_jp4_certifi/site-packages/": "/",
    },
    strip_prefix = ".",
    tags = ["manual"],
)

brt_engine_files(
    name = "rev1_engine_files",
    models = HALO_MODELS,
    package_directory = "data/models/engine_files",
    program_name = "jupiter",
)

pkg_tar(
    name = "ros_shims",
    srcs = ["local_setup.sh"],
    package_dir = "ros",
    visibility = ["//autonomy/jupiter/robotics:__subpackages__"],
)

"""
This package is necessary for the current VPU Version 1 with Jetpack 4.4.
It's YOCTO installation is missing these cuda libraries,
which are linked to cuda using applications by Bazel
"""

pkg_tar(
    name = "missing_cuda_files",
    srcs = select({
        "//tools/crosstool:vpu1_jp4": [
            "@vpu_cuda_toolchain//crosstool:extra_tools/aarch64-autonomy-linux/usr/local/cuda-10.2/lib/libcufft.so.10.1.2.89",
            "@vpu_cuda_toolchain//crosstool:extra_tools/aarch64-autonomy-linux/usr/local/cuda-10.2/lib/libcurand.so.10.1.2.89",
        ],
        "//conditions:default": [],
    }),
    package_dir = "ros/lib",
    symlinks = select({
        "//tools/crosstool:vpu1_jp4": {
            "libcufft.so.10": "libcufft.so.10.1.2.89",
            "libcurand.so.10": "libcurand.so.10.1.2.89",
        },
        "//conditions:default": {},
    }),
    tags = ["manual"],
)
