diff --git a/BUILD.bazel b/BUILD.bazel
index 87df24c..f0809f3 100644
--- a/BUILD.bazel
+++ b/BUILD.bazel
@@ -1,10 +1,11 @@
 load("@rules_pkg//pkg:mappings.bzl", "pkg_files")
 load("@rules_pkg//pkg:tar.bzl", "pkg_tar")
+load(":utils.bzl", "create_symlinks", "pyinit_file_genrule")
 
 pkg_files(
     name = "setup_scripts",
     srcs = [
-        "desktop_setup.sh",
+        "scripts/desktop_setup.sh",
     ],
     prefix = "",
 )
@@ -32,6 +33,87 @@ pkg_tar(
     visibility = ["//visibility:public"],
 )
 
+pyinit_file_genrule("gen_adk_init", "autonomy")
+
+pkg_tar(
+    name = "adk_python_tar",
+    srcs = [
+        ":gen_adk_init",
+        "//autonomy/adk/idl:can_py",
+        "//autonomy/adk/idl:sensor_py",
+        "//autonomy/adk/python/image:adk_py_package",
+        "//autonomy/adk/python_bindings:py_wgs84.so",
+        "//autonomy/adk/simulation/sim_utils:elevation_map",
+        "//autonomy/adk/simulation/sim_utils:functions",
+        "//autonomy/adk/simulation/sim_utils:geojson",
+        "//autonomy/adk/simulation/sim_utils:plane_fit",
+    ],
+    remap_paths = {
+        #"autonomy/adk/idl/common": "/",
+    },
+    strip_prefix = ".",
+    tags = [
+        "manual",
+        "no-cache",
+        "no-remote",
+        "no-remote-cache",
+        "no-remote-cache-upload",
+    ],
+    visibility = ["//visibility:public"],
+)
+
+pkg_tar(
+    name = "external_python_tar",
+    srcs = [
+        "//autonomy/jupiter/galileo/fact_esim_coordinator",
+        "//third_party/python:boto3",
+        "//third_party/python:numpy",
+        "//third_party/python:opencv-contrib-python-headless",
+        "//third_party/python:protobuf",
+        "//third_party/python:pyyaml",
+        "//third_party/python:rasterio",
+        "//third_party/python:scipy",
+        "@com_deere_github_machineautomation_factesim//:factlib_lib",
+        "@rti_connextdds_py",
+    ],
+    include_runfiles = True,
+    remap_paths = {
+        "external/com_deere_github_machineautomation_factesim/": "/",
+        "external/rti_connextdds_py/": "/",
+    },
+    strip_prefix = ".",
+    tags = [
+        "manual",
+        "no-cache",
+        "no-remote",
+        "no-remote-cache",
+        "no-remote-cache-upload",
+    ],
+    deps = [
+    ],
+)
+
+pkg_tar(
+    name = "brt_python_tar",
+    srcs = [
+    ],
+    package_dir = "brt/usr/lib/python3/brt-packages",
+    strip_prefix = ".",
+    tags = [
+        "manual",
+        "no-cache",
+        "no-remote",
+        "no-remote-cache",
+        "no-remote-cache-upload",
+        "no-vpu",
+    ],
+    visibility = ["//visibility:public"],
+    deps = [
+        "adk_python_tar",
+        "external_python_tar",
+    ],
+)
+
 # create the tar file that contains everything needed to set up a ros2-jupiter environment
 pkg_tar(
     name = "desktop_app",
@@ -47,6 +129,7 @@ pkg_tar(
         "no-remote-cache-upload",
     ],
     deps = [
+        ":brt_python_tar",
         ":jupiter_packages",
         ":jupiter_qos_profiles_files_tar",
         "//autonomy/adk/bundle:adk-appfs",
@@ -54,8 +137,20 @@ pkg_tar(
     ],
 )
 
+py_binary(
+    name = "restructure_packages",
+    srcs = ["scripts/restructure_packages.py"],
+    main = "scripts/restructure_packages.py",
+    deps = [],
+)
+
 sh_binary(
     name = "install_desktop_app",
-    srcs = ["install.sh"],
-    data = [":desktop_app"],
+    srcs = [
+        "scripts/install.sh",
+    ],
+    data = [
+        ":restructure_packages",
+        ":desktop_app",
+    ],
 )
diff --git a/main.patch b/main.patch
index 23f5363..e69de29 100644
--- a/main.patch
+++ b/main.patch
@@ -1,24 +0,0 @@
-diff --git a/autonomy/adk/bundle/BUILD.bazel b/autonomy/adk/bundle/BUILD.bazel
-index 4f3d86e37..c365efe27 100644
---- a/autonomy/adk/bundle/BUILD.bazel
-+++ b/autonomy/adk/bundle/BUILD.bazel
-@@ -91,6 +91,7 @@ pkg_tar(
-         "no-remote-cache",
-         "no-remote-cache-upload",
-     ],
-+    visibility = ["//autonomy/jupiter/robotics:__subpackages__"],
-     deps = [
-         ":rti_python_tar",
-         "//autonomy/adk/idl:idl_xml_pkg_tar",
-diff --git a/autonomy/jupiter/robotics/halo/bundle/BUILD.bazel b/autonomy/jupiter/robotics/halo/bundle/BUILD.bazel
-index aac07d5d5..3349603c0 100644
---- a/autonomy/jupiter/robotics/halo/bundle/BUILD.bazel
-+++ b/autonomy/jupiter/robotics/halo/bundle/BUILD.bazel
-@@ -211,6 +211,7 @@ pkg_tar(
-         "no-remote-cache",
-         "no-remote-cache-upload",
-     ],
-+    visibility = ["//autonomy/jupiter/robotics:__subpackages__"],
-     deps = [
-         ":pip_deps_pkg",
-         ":ros_shims",
diff --git a/scripts/desktop_setup.sh b/scripts/desktop_setup.sh
index 4dc8759..b807665 100755
--- a/scripts/desktop_setup.sh
+++ b/scripts/desktop_setup.sh
@@ -60,6 +60,9 @@ export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${BRT_APP_PATH}/brt/lib"
 export PATH=${PATH:+${PATH}:}${BRT_APP_PATH}/brt/ros/bin:${BRT_APP_PATH}/brt/bin
 export PKG_CONFIG_PATH=${PKG_CONFIG_PATH:+${PKG_CONFIG_PATH}:}${BRT_APP_PATH}/brt/ros/lib/pkgconfig
 export PYTHONPATH=${PYTHONPATH:+${PYTHONPATH}:}${BRT_APP_PATH}/brt/ros/lib/python3.10/site-packages
+export PYTHONPATH="${PYTHONPATH}:${BRT_APP_PATH}/brt/usr/lib/python3/brt-packages"
+export PYTHONPATH="${PYTHONPATH}:${BRT_APP_PATH}/brt/usr/lib/python3/external-packages"
+export PYTHONPATH="${PYTHONPATH}:${BRT_APP_PATH}/brt/usr/share/external/rti_connext:${BRT_APP_PATH}/brt/usr/share/external/rti_connextdds_py"
 #export ROS_LOG_DIR=/var/volatile
 
 # Setting  QoS profiles
diff --git a/scripts/install.sh b/scripts/install.sh
index 41643e7..a484b7a 100755
--- a/scripts/install.sh
+++ b/scripts/install.sh
@@ -1,4 +1,18 @@
 #!/usr/bin/env sh
+
+create_symlinks()
+{
+  PARENT_DIR=$1
+  DEST_DIR=$2
+  for FILE in "$PARENT_DIR"/*; do
+    if [ -f "$FILE" ]; then
+      BASENAME=$(basename ${FILE})
+      echo "Creating symlink $DEST_DIR/$BASENAME for file $FILE"
+      ln -s $FILE $DEST_DIR/$BASENAME
+    fi
+  done
+}
+
 BRT_APP_PATH="$HOME"
 if [ "$#" -ge 1 ]; then
     BRT_APP_PATH=$1
@@ -18,3 +32,12 @@ fi
 
 echo "Installing in directory ${BRT_APP_PATH} ..."
 tar -xvpf $DESKTOP_TAR_FILE -C $BRT_APP_PATH
+
+# creating symlinks
+BRT_PYTHON_LIBS_PATH="$BRT_APP_PATH/app/brt/usr/lib/python3/brt-packages"
+create_symlinks "$BRT_PYTHON_LIBS_PATH/autonomy/adk/idl/common" "$BRT_PYTHON_LIBS_PATH"
+create_symlinks "$BRT_PYTHON_LIBS_PATH/autonomy/adk/idl/sensor/camera" "$BRT_PYTHON_LIBS_PATH"
+
+support_script="restructure_packages"
+support_script="$(pwd)/../../$support_script"
+"$support_script" "$BRT_PYTHON_LIBS_PATH/external" "$BRT_APP_PATH/app/brt/usr/lib/python3/external-packages"
